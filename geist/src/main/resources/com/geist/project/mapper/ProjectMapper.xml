<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<!-- 프로젝트 페이지
			담당 : 홍예진

 create table project(
proj_no number(10) not null,
proj_name varchar2(20) not null,
proj_agency varchar2(20) not null,
proj_start date,
proj_end date,
constraint pk_project primary key(proj_no)
);

create table proj_management(
proj_no number(10) not null,
dept_no number(10) not null,
constraint pk_proj_management primary key(proj_no, dept_no),
constraint fk_proj_management_proj_no foreign key(proj_no) references project(proj_no),
constraint fk_proj_management_dept_no foreign key(dept_no) references department(dept_no)
);

			 -->
			 
<mapper namespace = "com.geist.project.mapper.ProjectMapper">

<select id="projectAllList" resultType="com.geist.project.domain.ProjectVO">
	<![CDATA[ 
		SELECT 
		    proj_no, proj_name, proj_agency, proj_start, proj_end
		FROM(
		    SELECT /*+INDEX_DESC(notice pk_project) */
		        projectAllList.*, rownum rn
		    FROM (
		        SELECT proj_no, proj_name, proj_agency, to_char(proj_start, 'YYYY-MM-DD') proj_start, to_char(proj_end, 'YYYY-MM-DD') proj_end
		        FROM project
		        ORDER BY proj_no DESC
		    ) projectAllList
		    WHERE
		        rownum <= #{pageNum} * #{amount}  
		    )
		WHERE 
		    rn > (#{pageNum} -1) * #{amount} 
	]]>
</select>

<select id = "projectList" resultType = "com.geist.project.domain.ProjectVO">
	<![CDATA[ 
		SELECT 
		    proj_no, proj_name, proj_agency, proj_start, proj_end
		FROM(
		    SELECT /*+INDEX_DESC(notice pk_project) */
		        projManagement.*, rownum rn
		    FROM (
		        SELECT p.proj_no proj_no, p.proj_name proj_name, p.proj_agency proj_agency, to_char(p.proj_start, 'YYYY-MM-DD') proj_start, to_char(p.proj_end, 'YYYY-MM-DD') proj_end
		        FROM project p, proj_management m
		        WHERE
		            m.dept_no = #{dept_no}
		            and p.proj_no = m.proj_no
		        ORDER BY proj_no DESC
		    ) projManagement
		    WHERE
		        rownum <= #{cri.pageNum} * #{cri.amount}  
		    )
		WHERE 
		    rn > (#{cri.pageNum} -1) * #{cri.amount} 
	]]>
</select>

<select id = "projectRead" resultType = "com.geist.project.domain.ProjectVO">
	select proj_name, proj_agency, proj_start, proj_end from project where proj_no = #{proj_no}
</select>

<select id="projectDept" resultType="int">
		SELECT
			dept_no
		FROM
			employee
		Where
			emp_no = #{emp_no}
	</select>
	
<select id="projectCount" resultType="int">
	SELECT count(*) FROM proj_management where dept_no = #{dept_no}
</select>
	
<select id="projectAllCount" resultType="int">
	SELECT count(*) FROM project
</select>
	
<insert id = "projectWrite">
	insert into project
	(proj_no, proj_name, proj_agency, proj_start, proj_end)
	values (project_seq.nextval, #{proj_name}, #{proj_agency}, #{proj_start}, #{proj_end})
</insert>

<insert id = "projectMWrite">
	insert into proj_management(proj_no, dept_no) values ((select MAX(proj_no) from project
	),#{dept_no})

</insert>

<update id = "projectUpdate">
	update project set proj_name = #{proj_name}, proj_agency = #{proj_agency}, proj_start = to_char(#{proj_start}, 'YYYY-MM-DD') , proj_end = to_char(#{proj_end}, 'YYYY-MM-DD')  where proj_no = #{proj_no}
</update>

<delete id = "projectDelete">
	delete from project where proj_no = #{proj_no}
</delete>

</mapper>
			 